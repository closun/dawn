<image-gallery data-id="{{ block.id }}">
  {%- if block.settings.heading -%}
    <h2>{{ block.settings.heading }}</h2>
  {%- endif -%}

  {%- if block.settings.description -%}
    <p>{{ block.settings.description }}</p>
  {%- endif -%}

  <div class="gallery">
    <figure class="gallery__item gallery__item--1">
      {%- if block.settings.image_1 -%}
        <img src="{{ block.settings.image_1 | img_url: '1024x' }}" alt="{{ block.settings.image_1.alt }}" loading="lazy" width="{{block.settings.image_1.width}}" height="{{block.settings.image_1.height}}">
      {%- else -%}
        <img src="{{ 'party-hat-frenchie.jpg' | asset_url }}" loading="lazy" width="925" height="617">
      {%- endif -%}
    </figure>
    <figure class="gallery__item gallery__item--2">
      {%- if block.settings.image_2 -%}
        <img src="{{ block.settings.image_2 | img_url: '1024x' }}" alt="{{ block.settings.image_2.alt }}" loading="lazy" width="{{block.settings.image_2.width}}" height="{{block.settings.image_2.height}}">
      {%- else -%}
        <img src="{{ 'dog-in-birthday-hat.jpg' | asset_url }}" loading="lazy" width="925" height="617">
      {%- endif -%}
    </figure>
    <figure class="gallery__item gallery__item--3">
      {%- if block.settings.image_3 -%}
        <img src="{{ block.settings.image_3 | img_url: '1024x'}}" alt="{{ block.settings.image_3.alt }}" loading="lazy" width="{{block.settings.image_3.width}}" height="{{block.settings.image_3.height}}">
      {%- else -%}
        <img src="{{ 'all-dogs-go-to-birthday.jpg' | asset_url }}" loading="lazy" width="925" height="921">
      {%- endif -%}
    </figure>
    <figure class="gallery__item gallery__item--4">
      {%- if block.settings.image_4 -%}
        <img src="{{ block.settings.image_4 | img_url: '1024x' }}" alt="{{ block.settings.image_4.alt }}" loading="lazy" width="{{block.settings.image_4.width}}" height="{{block.settings.image_4.height}}">
      {%- else -%}
        <img src="{{ 'poochie-party-treats.jpg' | asset_url }}" loading="lazy" width="925" height="617">
      {%- endif -%}
    </figure>
  </div>

  <image-popup init>
    <template image-popup>
      <button close-button class="close-button">
        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" role="presentation" class="icon icon-close" fill="none" viewBox="0 0 18 17">
          <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
        </svg>
      </button>
    </template>
  </image-popup>

</image-gallery>

{% schema %}
  {
    "name": "Image Gallery",    
    "templates": ["product", "index"],
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Cute Puppy Gallery"
      },
      {
        "type": "text",
        "id": "description",
        "label": "Description",
        "default": "A simple app block that shows a grid of images that can be customized by the merchant. Each image can be selected to show a popup with the full-sized image."
      },
      {
        "type": "image_picker",
        "id": "image_1",
        "label": "Image 1"
      },
      {
        "type": "image_picker",
        "id": "image_2",
        "label": "Image 2"
      },
      {
        "type": "image_picker",
        "id": "image_3",
        "label": "Image 3"
      },
      {
        "type": "image_picker",
        "id": "image_4",
        "label": "Image 4"
      }
    ]
  }
  
{% endschema %}
  
  {% stylesheet %}
  image-gallery .gallery {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(5, 5vw);
  grid-gap: 15px;
}

image-gallery img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  cursor: pointer;
  transition: 0.3s transform cubic-bezier(0.075, 0.82, 0.165, 1);
}

image-gallery figure {
  overflow: hidden;
}

image-gallery img:hover {
  transform: scale(1.02);
}

image-gallery .gallery__item {
  padding: 0;
  margin: 0;
}

image-gallery .gallery__item--1 {
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 3;
}

image-gallery .gallery__item--2 {
  grid-column-start: 3;
  grid-column-end: 5;
  grid-row-start: 1;
  grid-row-end: 3;
}

image-gallery .gallery__item--3 {
  grid-column-start: 5;
  grid-column-end: 9;
  grid-row-start: 1;
  grid-row-end: 6;
}

image-gallery .gallery__item--4 {
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 3;
  grid-row-end: 6;
}

image-popup[init] {
  display: none;
}

image-popup {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top:0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: black;
  z-index: 10;
  padding: 15px;
}

image-popup img {
  max-width: 100%;
  height: auto;
}

image-popup .icon {
  color: white;
  width: 40px;
  height: auto;
}

image-popup .close-button {
  position: absolute;
  right: 15px;
  top: 15px;
  background: none;
	border: none;
	padding: 0;
	font: inherit;
	cursor: pointer;
	outline: inherit;
}

{% endstylesheet %}

{% javascript %}
  let imagePopupTemplate = null;

class ImageGallery extends HTMLElement {
  constructor() {
    super();
  }

  connectedCallback() {
    this.images = this.querySelectorAll('img');
    this.images.forEach((image) => {
      image.addEventListener('click', this.showPopup)
    })
  }

  disconnectedCallback() {
    this.images.forEach((image) => {
      image.removeEventListener('click', this.showPopup)
    })
  }

  showPopup({currentTarget}) {
    const popup = document.createElement('image-popup');
    popup.img = currentTarget;
    document.body.appendChild(popup);
  }
}

class ImagePopup extends HTMLElement {
  get template() { return imagePopupTemplate && imagePopupTemplate.cloneNode(true) }
  set template(value) { imagePopupTemplate = value}

  constructor() {
    super();
    // If we haven't yet set our template, than we don't want to render this custom element right away,
    // so store its contents and then remove it from the DOM.
    if (this.hasAttribute('init')) this.remove();

    // If the template is contained within the custom element,
    // than its the instance of it that was included in the page response.
    this.template = this.template || this.querySelector('template').content;
  }

  connectedCallback() {
    this.appendChild(this.template);
    this.img && this.appendChild(this.img.cloneNode());
    this.querySelector('[close-button]').addEventListener('click', () => this.remove(), {once: true})
    document.addEventListener('keydown', ({key}) => key === "Escape" && this.remove(), {once: true});
  }
}

customElements.define('image-popup', ImagePopup)
customElements.define('image-gallery', ImageGallery)
{% endjavascript %}

